Query 1: Get all flights with gate, airport and weather information
"Sort  (cost=4493597.70..4493722.70 rows=50000 width=88) (actual time=159343.565..159354.847 rows=50444 loops=1)"
"  Sort Key: f.flight_number"
"  Sort Method: external merge  Disk: 5088kB"
"  ->  Hash Join  (cost=2244486.50..4487301.29 rows=50000 width=88) (actual time=119818.656..159251.032 rows=50444 loops=1)"
"        Hash Cond: (f.arrival_gate_id = arr_gate.gate_id)"
"        ->  Hash Join  (cost=2243764.00..4486447.52 rows=50000 width=83) (actual time=119793.902..159170.346 rows=50444 loops=1)"
"              Hash Cond: (f.departure_gate_id = dep_gate.gate_id)"
"              ->  Hash Join  (cost=2243041.50..4485593.75 rows=50000 width=78) (actual time=119785.888..159119.843 rows=50444 loops=1)"
"                    Hash Cond: (f.arrival_airport_id = arr_airport.airport_id)"
"                    ->  Hash Join  (cost=1700.00..2243564.75 rows=50000 width=57) (actual time=37878.799..77156.031 rows=50213 loops=1)"
"                          Hash Cond: (dep_airport.airport_id = f.departure_airport_id)"
"                          ->  Hash Right Join  (cost=158.00..2241279.00 rows=5000 width=29) (actual time=37815.186..77043.732 rows=5019 loops=1)"
"                                Hash Cond: ((dep_weather.airport_id = dep_airport.airport_id) AND (dep_weather.update_time = (SubPlan 1)))"
"                                ->  Seq Scan on weather dep_weather  (cost=0.00..771.00 rows=50000 width=12) (actual time=0.027..8.601 rows=50000 loops=1)"
"                                ->  Hash  (cost=83.00..83.00 rows=5000 width=21) (actual time=37807.067..37807.070 rows=5000 loops=1)"
"                                      Buckets: 8192  Batches: 1  Memory Usage: 331kB"
"                                      ->  Seq Scan on airport dep_airport  (cost=0.00..83.00 rows=5000 width=21) (actual time=0.194..17.472 rows=5000 loops=1)"
"                                      SubPlan 1"
"                                        ->  Aggregate  (cost=896.02..896.03 rows=1 width=4) (actual time=7.672..7.673 rows=1 loops=10019)"
"                                              ->  Seq Scan on weather  (cost=0.00..896.00 rows=10 width=4) (actual time=0.753..7.638 rows=10 loops=10019)"
"                                                    Filter: (airport_id = dep_airport.airport_id)"
"                                                    Rows Removed by Filter: 49990"
"                          ->  Hash  (cost=917.00..917.00 rows=50000 width=36) (actual time=63.166..63.168 rows=50000 loops=1)"
"                                Buckets: 65536  Batches: 1  Memory Usage: 3833kB"
"                                ->  Seq Scan on flight f  (cost=0.00..917.00 rows=50000 width=36) (actual time=0.769..43.009 rows=50000 loops=1)"
"                    ->  Hash  (cost=2241279.00..2241279.00 rows=5000 width=29) (actual time=81906.995..81907.002 rows=5019 loops=1)"
"                          Buckets: 8192  Batches: 1  Memory Usage: 371kB"
"                          ->  Hash Right Join  (cost=158.00..2241279.00 rows=5000 width=29) (actual time=40900.276..81887.356 rows=5019 loops=1)"
"                                Hash Cond: ((arr_weather.airport_id = arr_airport.airport_id) AND (arr_weather.update_time = (SubPlan 2)))"
"                                ->  Seq Scan on weather arr_weather  (cost=0.00..771.00 rows=50000 width=12) (actual time=0.071..9.346 rows=50000 loops=1)"
"                                ->  Hash  (cost=83.00..83.00 rows=5000 width=21) (actual time=40892.005..40892.008 rows=5000 loops=1)"
"                                      Buckets: 8192  Batches: 1  Memory Usage: 331kB"
"                                      ->  Seq Scan on airport arr_airport  (cost=0.00..83.00 rows=5000 width=21) (actual time=0.028..6.764 rows=5000 loops=1)"
"                                      SubPlan 2"
"                                        ->  Aggregate  (cost=896.02..896.03 rows=1 width=4) (actual time=8.155..8.156 rows=1 loops=10019)"
"                                              ->  Seq Scan on weather weather_1  (cost=0.00..896.00 rows=10 width=4) (actual time=0.806..8.116 rows=10 loops=10019)"
"                                                    Filter: (airport_id = arr_airport.airport_id)"
"                                                    Rows Removed by Filter: 49990"
"              ->  Hash  (cost=410.00..410.00 rows=25000 width=9) (actual time=7.893..7.894 rows=25000 loops=1)"
"                    Buckets: 32768  Batches: 1  Memory Usage: 1280kB"
"                    ->  Seq Scan on gate dep_gate  (cost=0.00..410.00 rows=25000 width=9) (actual time=0.022..3.191 rows=25000 loops=1)"
"        ->  Hash  (cost=410.00..410.00 rows=25000 width=9) (actual time=24.612..24.613 rows=25000 loops=1)"
"              Buckets: 32768  Batches: 1  Memory Usage: 1280kB"
"              ->  Seq Scan on gate arr_gate  (cost=0.00..410.00 rows=25000 width=9) (actual time=1.262..18.956 rows=25000 loops=1)"
"Planning Time: 25.804 ms"
"Execution Time: 159366.594 ms"


Query 2: Get all airports and the total number of flights for each airport
"Sort  (cost=3166.79..3179.29 rows=5000 width=53) (actual time=40.831..41.130 rows=5000 loops=1)"
"  Sort Key: a.airport_id"
"  Sort Method: quicksort  Memory: 453kB"
"  ->  HashAggregate  (cost=2797.09..2859.59 rows=5000 width=53) (actual time=38.147..39.476 rows=5000 loops=1)"
"        Group Key: a.airport_id"
"        Batches: 1  Memory Usage: 2257kB"
"        ->  Hash Right Join  (cost=1312.50..2748.42 rows=9734 width=29) (actual time=14.691..33.556 rows=9900 loops=1)"
"              Hash Cond: (""*SELECT* 1"".airport_id = a.airport_id)"
"              ->  Append  (cost=1167.00..2577.35 rows=9734 width=12) (actual time=13.761..29.639 rows=9863 loops=1)"
"                    ->  Subquery Scan on ""*SELECT* 1""  (cost=1167.00..1264.26 rows=4863 width=12) (actual time=13.760..14.886 rows=4931 loops=1)"
"                          ->  HashAggregate  (cost=1167.00..1215.63 rows=4863 width=12) (actual time=13.758..14.528 rows=4931 loops=1)"
"                                Group Key: flight.departure_airport_id"
"                                Batches: 1  Memory Usage: 721kB"
"                                ->  Seq Scan on flight  (cost=0.00..917.00 rows=50000 width=4) (actual time=0.010..3.159 rows=50000 loops=1)"
"                    ->  Subquery Scan on ""*SELECT* 2""  (cost=1167.00..1264.42 rows=4871 width=12) (actual time=12.967..14.246 rows=4932 loops=1)"
"                          ->  HashAggregate  (cost=1167.00..1215.71 rows=4871 width=12) (actual time=12.965..13.824 rows=4932 loops=1)"
"                                Group Key: flight_1.arrival_airport_id"
"                                Batches: 1  Memory Usage: 721kB"
"                                ->  Seq Scan on flight flight_1  (cost=0.00..917.00 rows=50000 width=4) (actual time=0.032..2.997 rows=50000 loops=1)"
"              ->  Hash  (cost=83.00..83.00 rows=5000 width=21) (actual time=0.889..0.889 rows=5000 loops=1)"
"                    Buckets: 8192  Batches: 1  Memory Usage: 324kB"
"                    ->  Seq Scan on airport a  (cost=0.00..83.00 rows=5000 width=21) (actual time=0.017..0.322 rows=5000 loops=1)"
"Planning Time: 4.281 ms"
"Execution Time: 42.486 ms"


Query 3: Get all flights that do not have a pilot
"Sort  (cost=5142.52..5226.09 rows=33428 width=36) (actual time=101.434..106.095 rows=35801 loops=1)"
"  Sort Key: f.flight_number"
"  Sort Method: quicksort  Memory: 3355kB"
"  ->  Hash Right Anti Join  (cost=1542.00..2630.61 rows=33428 width=36) (actual time=73.222..85.928 rows=35801 loops=1)"
"        Hash Cond: (c.flight_number = f.flight_number)"
"        ->  Seq Scan on crew c  (cost=0.00..984.00 rows=16572 width=4) (actual time=1.014..51.984 rows=16701 loops=1)"
"              Filter: (crew_type = 'Pilot'::crew_type)"
"              Rows Removed by Filter: 33299"
"        ->  Hash  (cost=917.00..917.00 rows=50000 width=36) (actual time=12.612..12.614 rows=50000 loops=1)"
"              Buckets: 65536  Batches: 1  Memory Usage: 3833kB"
"              ->  Seq Scan on flight f  (cost=0.00..917.00 rows=50000 width=36) (actual time=0.016..3.718 rows=50000 loops=1)"
"Planning Time: 8.006 ms"
"Execution Time: 108.023 ms"


Query 4: Get all flights with matching weather conditions at the departure and arrival airports
"Sort  (cost=2258468.80..2258468.81 rows=1 width=74) (actual time=151725.224..151725.997 rows=4553 loops=1)"
"  Sort Key: f.flight_number"
"  Sort Method: quicksort  Memory: 650kB"
"  ->  Hash Join  (cost=3379.00..2258468.79 rows=1 width=74) (actual time=75386.043..151706.086 rows=4553 loops=1)"
"        Hash Cond: ((f.arrival_airport_id = arr_airport.airport_id) AND (arr_weather.update_time = (SubPlan 2)))"
"        ->  Hash Join  (cost=3221.00..2244375.82 rows=311 width=65) (actual time=39413.311..79499.880 rows=45668 loops=1)"
"              Hash Cond: ((f.arrival_airport_id = arr_weather.airport_id) AND (dep_weather.conditions = arr_weather.conditions))"
"              ->  Hash Join  (cost=1700.00..2242826.06 rows=342 width=57) (actual time=39387.132..79395.978 rows=50213 loops=1)"
"                    Hash Cond: (dep_airport.airport_id = f.departure_airport_id)"
"                    ->  Hash Join  (cost=158.00..2241279.00 rows=34 width=29) (actual time=39364.135..79319.315 rows=5019 loops=1)"
"                          Hash Cond: ((dep_weather.airport_id = dep_airport.airport_id) AND (dep_weather.update_time = (SubPlan 1)))"
"                          ->  Seq Scan on weather dep_weather  (cost=0.00..771.00 rows=50000 width=12) (actual time=0.036..8.923 rows=50000 loops=1)"
"                          ->  Hash  (cost=83.00..83.00 rows=5000 width=21) (actual time=39356.320..39356.322 rows=5000 loops=1)"
"                                Buckets: 8192  Batches: 1  Memory Usage: 331kB"
"                                ->  Seq Scan on airport dep_airport  (cost=0.00..83.00 rows=5000 width=21) (actual time=0.018..5.636 rows=5000 loops=1)"
"                                SubPlan 1"
"                                  ->  Aggregate  (cost=896.02..896.03 rows=1 width=4) (actual time=7.902..7.902 rows=1 loops=10019)"
"                                        ->  Seq Scan on weather  (cost=0.00..896.00 rows=10 width=4) (actual time=0.773..7.869 rows=10 loops=10019)"
"                                              Filter: (airport_id = dep_airport.airport_id)"
"                                              Rows Removed by Filter: 49990"
"                    ->  Hash  (cost=917.00..917.00 rows=50000 width=36) (actual time=22.608..22.615 rows=50000 loops=1)"
"                          Buckets: 65536  Batches: 1  Memory Usage: 3833kB"
"                          ->  Seq Scan on flight f  (cost=0.00..917.00 rows=50000 width=36) (actual time=0.041..6.294 rows=50000 loops=1)"
"              ->  Hash  (cost=771.00..771.00 rows=50000 width=12) (actual time=25.776..25.777 rows=50000 loops=1)"
"                    Buckets: 65536  Batches: 1  Memory Usage: 2661kB"
"                    ->  Seq Scan on weather arr_weather  (cost=0.00..771.00 rows=50000 width=12) (actual time=0.032..10.713 rows=50000 loops=1)"
"        ->  Hash  (cost=83.00..83.00 rows=5000 width=21) (actual time=35964.815..35964.817 rows=5000 loops=1)"
"              Buckets: 8192  Batches: 1  Memory Usage: 331kB"
"              ->  Seq Scan on airport arr_airport  (cost=0.00..83.00 rows=5000 width=21) (actual time=0.026..5.827 rows=5000 loops=1)"
"              SubPlan 2"
"                ->  Aggregate  (cost=896.02..896.03 rows=1 width=4) (actual time=7.544..7.544 rows=1 loops=9553)"
"                      ->  Seq Scan on weather weather_1  (cost=0.00..896.00 rows=10 width=4) (actual time=0.736..7.512 rows=10 loops=9553)"
"                            Filter: (airport_id = arr_airport.airport_id)"
"                            Rows Removed by Filter: 49990"
"Planning Time: 3.395 ms"
"Execution Time: 151728.125 ms"


Query 5: Update gate availability if flight left the gate 
"Update on gate g  (cost=576.61..1293.45 rows=0 width=0) (actual time=108.463..108.468 rows=0 loops=1)"
"  ->  Hash Join  (cost=576.61..1293.45 rows=2758 width=16) (actual time=23.800..65.860 rows=2758 loops=1)"
"        Hash Cond: (f.departure_gate_id = g.gate_id)"
"        ->  Seq Scan on flight f  (cost=0.00..709.60 rows=2758 width=10) (actual time=1.372..39.807 rows=2758 loops=1)"
"              Filter: (flight_status = 'Departed'::flight_status)"
"              Rows Removed by Filter: 19930"
"        ->  Hash  (cost=345.16..345.16 rows=18516 width=10) (actual time=21.806..21.809 rows=18516 loops=1)"
"              Buckets: 32768  Batches: 1  Memory Usage: 1052kB"
"              ->  Seq Scan on gate g  (cost=0.00..345.16 rows=18516 width=10) (actual time=0.139..12.710 rows=18516 loops=1)"
"Planning Time: 11.906 ms"
"Execution Time: 109.963 ms"


Query 6: Update all flights whose aircraft status was Boarding to flight status Gate Closed
"Update on flight f  (cost=401.51..1459.91 rows=0 width=0) (actual time=145.571..145.572 rows=0 loops=1)"
"  ->  Hash Join  (cost=401.51..1459.91 rows=1062 width=16) (actual time=15.229..24.146 rows=1040 loops=1)"
"        Hash Cond: (f.aircraft_id = a.aircraft_id)"
"        ->  Seq Scan on flight f  (cost=0.00..1042.00 rows=6245 width=10) (actual time=0.014..6.509 rows=6207 loops=1)"
"              Filter: (flight_status = 'Boarding'::flight_status)"
"              Rows Removed by Filter: 43793"
"        ->  Hash  (cost=359.00..359.00 rows=3401 width=10) (actual time=15.195..15.195 rows=3401 loops=1)"
"              Buckets: 4096  Batches: 1  Memory Usage: 179kB"
"              ->  Seq Scan on aircraft a  (cost=0.00..359.00 rows=3401 width=10) (actual time=0.497..14.535 rows=3401 loops=1)"
"                    Filter: (current_status = 'Boarding'::aircraft_status)"
"                    Rows Removed by Filter: 16599"
"Planning Time: 7.628 ms"
"Execution Time: 146.417 ms"

Query 7:
"Delete on crew  (cost=1556.06..2640.89 rows=0 width=0) (actual time=105.902..105.909 rows=0 loops=1)
"   ->  Hash Semi Join  (cost=1556.06..2640.89 rows=8502 width=18) (actual time=54.708..87.877 rows=8349 loops=1)
"         Hash Cond: (crew.flight_number = f.flight_number)
 "        ->  Seq Scan on crew  (cost=0.00..859.00 rows=50000 width=10) (actual time=0.619..16.676 rows=50000 loops=1)
 "        ->  Hash  (cost=1449.78..1449.78 rows=8502 width=16) (actual time=53.899..53.904 rows=8352 loops=1)
 "              Buckets: 16384  Batches: 1  Memory Usage: 536kB
 "              ->  Hash Join  (cost=401.51..1449.78 rows=8502 width=16) (actual time=10.142..49.824 rows=8352 loops=1)
  "                   Hash Cond: (f.aircraft_id = a.aircraft_id)
   "                  ->  Seq Scan on flight f  (cost=0.00..917.00 rows=50000 width=14) (actual time=0.105..25.878 rows=50000 loops=1)
                     ->  Hash  (cost=359.00..359.00 rows=3401 width=10) (actual time=9.936..9.938 rows=3401 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 179kB
                           ->  Seq Scan on aircraft a  (cost=0.00..359.00 rows=3401 width=10) (actual time=0.037..7.326 rows=3401 loops=1)
                                 Filter: (current_status = 'Under maintenance'::aircraft_status)
                                 Rows Removed by Filter: 16599
 Planning Time: 34.416 ms
 Execution Time: 109.181 ms
(16 rows)
Delete on passenger  (cost=1556.06..3839.73 rows=0 width=0) (actual time=169.664..169.668 rows=0 loops=1)
   ->  Hash Semi Join  (cost=1556.06..3839.73 rows=17004 width=18) (actual time=31.077..131.382 rows=16611 loops=1)
         Hash Cond: (passenger.flight_number = f.flight_number)
         ->  Seq Scan on passenger  (cost=0.00..1832.00 rows=100000 width=10) (actual time=0.028..72.408 rows=100000 loops=1)
         ->  Hash  (cost=1449.78..1449.78 rows=8502 width=16) (actual time=30.923..30.927 rows=8352 loops=1)
               Buckets: 16384  Batches: 1  Memory Usage: 536kB
               ->  Hash Join  (cost=401.51..1449.78 rows=8502 width=16) (actual time=4.422..27.541 rows=8352 loops=1)
                     Hash Cond: (f.aircraft_id = a.aircraft_id)
                     ->  Seq Scan on flight f  (cost=0.00..917.00 rows=50000 width=14) (actual time=0.013..11.312 rows=50000 loops=1)
                     ->  Hash  (cost=359.00..359.00 rows=3401 width=10) (actual time=4.383..4.384 rows=3401 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 179kB
                           ->  Seq Scan on aircraft a  (cost=0.00..359.00 rows=3401 width=10) (actual time=0.012..3.539 rows=3401 loops=1)
                                 Filter: (current_status = 'Under maintenance'::aircraft_status)
                                 Rows Removed by Filter: 16599
 Planning Time: 10.202 ms
 Execution Time: 169.927 ms
(16 rows)
Delete on flight f  (cost=401.51..1449.78 rows=0 width=0) (actual time=48.936..48.939 rows=0 loops=1)
   ->  Hash Join  (cost=401.51..1449.78 rows=8502 width=12) (actual time=3.956..28.048 rows=8352 loops=1)
         Hash Cond: (f.aircraft_id = a.aircraft_id)
         ->  Seq Scan on flight f  (cost=0.00..917.00 rows=50000 width=10) (actual time=0.013..11.863 rows=50000 loops=1)
         ->  Hash  (cost=359.00..359.00 rows=3401 width=10) (actual time=3.925..3.927 rows=3401 loops=1)
               Buckets: 4096  Batches: 1  Memory Usage: 179kB
               ->  Seq Scan on aircraft a  (cost=0.00..359.00 rows=3401 width=10) (actual time=0.011..3.174 rows=3401 loops=1)
                     Filter: (current_status = 'Under maintenance'::aircraft_status)
                     Rows Removed by Filter: 16599
 Planning Time: 0.321 ms
 Trigger for constraint crew_flight_number_fkey: time=74566.790 calls=8352
 Trigger for constraint passenger_flight_number_fkey: time=150438.308 calls=8352
 Execution Time: 225083.603 ms
(13 rows)

Query 8: Delete all airports that have less than 5 gates

Delete on weather w  (cost=0.00..68479788.00 rows=0 width=0) (actual time=1023514.627..1023514.642 rows=0 loops=1)
   ->  Seq Scan on weather w  (cost=0.00..68479788.00 rows=25000 width=6) (actual time=418.728..1023417.218 rows=5016 loops=1)
         Filter: (SubPlan 2)
         Rows Removed by Filter: 44984
         SubPlan 2
           ->  Seq Scan on weather  (cost=913.03..1826.03 rows=34 width=4) (actual time=11.010..20.394 rows=33 loops=50000)
                 Filter: (update_time = $1)
                 Rows Removed by Filter: 47442
                 InitPlan 1 (returns $1)
                   ->  Aggregate  (cost=913.02..913.03 rows=1 width=4) (actual time=10.706..10.706 rows=1 loops=50000)
                         ->  Seq Scan on weather sub  (cost=0.00..913.00 rows=10 width=4) (actual time=1.011..10.671 rows=11 loops=50000)
                               Filter: (airport_id = w.airport_id)
                               Rows Removed by Filter: 49989
 Planning Time: 5.630 ms
 Execution Time: 1023515.512 ms
(15 rows)

Parameterized Query 1:
Nested Loop  (cost=1.72..889.53 rows=1 width=38) (actual time=13.864..13.867 rows=0 loops=1)
   ->  Nested Loop  (cost=1.44..889.23 rows=1 width=38) (actual time=13.863..13.865 rows=0 loops=1)
         ->  Nested Loop  (cost=1.15..888.90 rows=1 width=39) (actual time=13.863..13.865 rows=0 loops=1)
               ->  Nested Loop  (cost=0.86..888.59 rows=1 width=39) (actual time=13.863..13.864 rows=0 loops=1)
                     ->  Nested Loop  (cost=0.58..888.27 rows=1 width=40) (actual time=13.862..13.863 rows=0 loops=1)
                           ->  Nested Loop  (cost=0.29..887.95 rows=1 width=36) (actual time=13.862..13.863 rows=0 loops=1)
                                 ->  Seq Scan on crew c  (cost=0.00..879.64 rows=1 width=4) (actual time=13.861..13.861 rows=0 loops=1)
                                       Filter: ((member_name)::text = 'Ashley Wheeler'::text)
                                       Rows Removed by Filter: 41651
                                 ->  Index Scan using flight_pkey on flight f  (cost=0.29..8.31 rows=1 width=36) (never executed)
                                       Index Cond: (flight_number = c.flight_number)
                           ->  Index Scan using aircraft_pkey on aircraft a  (cost=0.29..0.32 rows=1 width=12) (never executed)
                                 Index Cond: (aircraft_id = f.aircraft_id)
                     ->  Index Scan using gate_pkey on gate d_gate  (cost=0.29..0.33 rows=1 width=7) (never executed)
                           Index Cond: (gate_id = f.departure_gate_id)
               ->  Index Scan using airport_pkey on airport d_airport  (cost=0.28..0.30 rows=1 width=8) (never executed)                     Index Cond: (airport_id = f.departure_airport_id)
         ->  Index Scan using gate_pkey on gate a_gate  (cost=0.29..0.33 rows=1 width=7) (never executed)
               Index Cond: (gate_id = f.arrival_gate_id)
   ->  Index Scan using airport_pkey on airport a_airport  (cost=0.28..0.30 rows=1 width=8) (never executed)
         Index Cond: (airport_id = f.arrival_airport_id)
 Planning Time: 50.733 ms
 Execution Time: 15.224 ms
(23 rows)

Parameterized Query 2:
Nested Loop  (cost=0.57..1882.98 rows=1 width=4) (actual time=2.921..84.100 rows=1 loops=1)
   ->  Nested Loop  (cost=0.29..1882.67 rows=1 width=4) (actual time=1.516..82.693 rows=1 loops=1)
         ->  Seq Scan on passenger p  (cost=0.00..1874.36 rows=1 width=4) (actual time=0.045..81.222 rows=1 loops=1)
               Filter: ((ticket_number)::text = 'ZOMYM4U7S6'::text)
               Rows Removed by Filter: 83388
         ->  Index Scan using flight_pkey on flight f  (cost=0.29..8.31 rows=1 width=8) (actual time=1.462..1.462 rows=1 loops=1)
               Index Cond: (flight_number = p.flight_number)
   ->  Index Scan using airport_pkey on airport a_airport  (cost=0.28..0.30 rows=1 width=8) (actual time=1.396..1.396 rows=1 loops=1)
         Index Cond: (airport_id = f.arrival_airport_id)
 Planning Time: 10.452 ms
 Execution Time: 84.147 ms
(11 rows)

Parameterized Query 3:
Update on weather  (cost=0.29..8.31 rows=0 width=0) (actual time=4.141..4.141 rows=0 loops=1)
   ->  Index Scan using weather_pkey on weather  (cost=0.29..8.31 rows=1 width=14) (actual time=3.446..3.446 rows=0 loops=1)
         Index Cond: (weather_id = 10004)
         Filter: (airport_id = 2021)
         Rows Removed by Filter: 1
 Planning Time: 8.661 ms
 Execution Time: 8.556 ms
(7 rows)

Parameterized Query 4:
Update on passenger  (cost=0.29..8.32 rows=0 width=0) (actual time=1.695..1.696 rows=0 loops=1)
   ->  Index Scan using passenger_pkey on passenger  (cost=0.29..8.32 rows=1 width=42) (actual time=1.693..1.694 rows=0 loops=1)
         Index Cond: (passenger_id = 100022)
         Filter: (((name)::text = 'Stephanie Garcia'::text) AND ((ticket_number)::text = 'ZOMYM4U7S6'::text) AND (flight_number = 84206))
 Planning Time: 8.210 ms
 Execution Time: 1.756 ms
(6 rows)
